filetype: rust

detect:
    filename: "\\.rs$"

rules:
    # function definition
    - identifier: "fn [a-z0-9_]+"
      # Reserved words
    - statement: "\\b(bool|abstract|alignof|as|become|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|offsetof|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b"
      # macros
    - special: "[a-z_]+!"
      # Constants
    - constant: "[A-Z][A-Z_]+"
      # Types
    - constant: "\\b[u,i,f]+(8|16|32|64|128)\\b"
      # Methods
    - identifier: "[a-zA-Z_0-9]*\\(+"
      # Numbers
    - constant.number: "\\b[0-9]+\\b"
    - constant.number: "\\b[0-9_]+[u,i,f]+(8|16|32|64|128)\\b"
    - symbol.brackets: "([(){}]|\\[|\\])"
      # Traits/Enums/Structs/Types/etc.
    - type: "[A-Z][a-z]+"

    - constant.string:
        start: "\""
        end: "\""
        skip: "\\\\."
        rules:
            - constant.specialChar: "\\\\."

    - constant.string:
        start: "r#+\""
        end: "\"#+"
        rules: []

    - comment:
        start: "//"
        end: "$"
        rules:
            - todo: "(TODO|XXX|FIXME):?"

    - comment:
        start: "/\\*"
        end: "\\*/"
        rules:
            - todo: "(TODO|XXX|FIXME):?"

    - special:
        start: "#!\\["
        end: "\\]"
        rules: []
